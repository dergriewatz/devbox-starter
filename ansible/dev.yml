---
- hosts: all
  vars:
    document_root: "/srv/share/symfony/web" 
    mysql_user:     'dev'
    mysql_password: 'dev'
    php_ini:
      'date.timezone':              "Europe/Berlin"
      'xdebug.idekey':              "PHPSTORM"
      'xdebug.max_nesting_level':   "256"
      'xdebug.remote_connect_back': "1"
      'xdebug.remote_enable ':      "1"
      'xdebug.remote_port ':        "9000"
      'xdebug.scream':              "0"
      'xdebug.show_local_vars':     "1"

  tasks:
    - name: add php ppa
      become: true
      apt_repository: 
        repo: "ppa:ondrej/php"

    - name: install packages
      apt: 
        name: "{{ item }}"
        state: latest
        update_cache: yes
      become: true
      with_items:
        - acl
        - apache2
        - curl
        - git
        - mysql-server
        - php
        - php-cli
        - php-curl
        - php-gd
        - php-intl
        - php-mysql
        - php-xdebug
        - php-xml
        - php-zip
        - python-mysqldb

    - name: enable apache rewrite module
      become: true
      apache2_module: 
        state: present 
        name: rewrite
      notify:
        - restart apache

    - name: install vhost template
      become: true
      template: 
        src: simple_vhost.conf.j2 
        dest: /etc/apache2/sites-enabled/000-default.conf
      notify:
        - restart apache

    - name: php.ini settings for apache
      become: true
      lineinfile: 
        dest: '/etc/php/7.0/apache2/php.ini'
        line: "{{ item.key }}='{{ item.value }}'"
        regexp: "^{{ item.key }}.*$"
      with_dict: "{{ php_ini }}"
      notify:
        - restart apache

    - name: php.ini settings for cli 
      become: true
      lineinfile: 
        dest: '/etc/php/7.0/cli/php.ini'
        line: "{{ item.key }}='{{ item.value }}'"
        regexp: "^{{ item.key }}.*$"
      with_dict: "{{ php_ini }}"
      notify:
        - restart apache

    - name: add mysql user
      become: true
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "*.*:ALL"

    - name: check if composer is installed
      stat: 
        path: /usr/local/bin/composer
      register: composer_state

    - block:
      - name: get composer signature
        uri:
          url: https://composer.github.io/installer.sig
          return_content: true
        register: composer_sig

      - name: download installer
        become: true
        get_url:
          url: https://getcomposer.org/installer
          dest: /tmp/composer-setup.php
          checksum: "sha384:{{ composer_sig.content }}"

      - name: install composer
        become: true
        command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      when: composer_state.stat.exists == false

    - name: install symfony installer
      become: true
      get_url:
        url: https://symfony.com/installer
        dest: /usr/local/bin/symfony
        mode: 0755

    - name: enable apache service
      become: true
      service: 
        name: apache2
        state: started
        enabled: true

    - name: copy xdebug script
      become: true
      copy:
        src: xdebug
        dest: /usr/local/bin/xdebug
        mode: 0755

  handlers:
    - name: restart apache
      become: true
      service: 
        name: apache2 
        state: restarted
